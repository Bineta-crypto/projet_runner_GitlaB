image: docker:latest  # Utiliser une image Docker qui contient Docker

services:
  - docker:dind  # Activer le service Docker-in-Docker

stages:
  - build
  - build_image
  - test

variables:
  DOCKER_DRIVER: overlay2
  CI_REGISTRY: registry.gitlab.com
  CI_REGISTRY_USER: $CI_REGISTRY_USER
  CI_REGISTRY_PASSWORD: $CI_REGISTRY_PASSWORD

build_application:
  image: node:14  # Utiliser l'image Node.js pour le build
  stage: build
  script:
    - echo "Building the application"
    - npm install
    - npm install --save-dev babel-loader @babel/core @babel/preset-env
    - npm run build
  artifacts:
    paths:
      - dist/

build_image:
  stage: build_image
  script:
    - docker info  # Vérifier que Docker est installé et fonctionnel
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - main

test_application:
  image: node:14  # Utiliser l'image Node.js pour les tests
  stage: test
  script:
    - echo "Running tests"
    - npm test







